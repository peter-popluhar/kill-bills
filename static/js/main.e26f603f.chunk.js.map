{"version":3,"sources":["utils/globalVariables.js","firebase.js","appAction.js","components/header.js","utils/fireBaseUtils.js","components/headerNotLogged.js","utils/appUtils.js","components/styled/formStyles.js","components/styled/orderOverviewStyles.js","components/orderOverview.js","components/form.js","components/styled/orderListButtons.js","components/orderList.js","components/archiveList.js","components/currencySettings.js","components/themeSettings.js","components/settings.js","components/tabsNav.js","components/styled/globalStyles.js","App.js","serviceWorker.js","rootReducer.js","appReducer.js","index.js","store/configureStore.js"],"names":["module","exports","xsMin","smMin","mdMin","lgMin","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","getUserAction","payload","type","locationAction","styles","justifyContent","alignItems","connect","state","user","userReducer","dispatch","logout","_ref","userFirstName","displayName","substr","indexOf","react_default","a","createElement","AppBar_default","position","Toolbar_default","style","Typography_default","component","variant","color","Chip_default","avatar","Avatar_default","alt","src","photoURL","label","Button_default","onClick","signOut","then","ORDER_ITEMS","databaseRef","path","database","ref","getDataFromDbFn","dispatcher","on","snapshot","ordersSnapshot","val","items","newState","item","hasOwnProperty","order","userName","email","unshift","itemId","itemName","itemInitialAmount","itemCalculatedAmount","itemInitialPrice","itemCalculatedPrice","currentDate","currentTime","archiveId","billLocation","itemCurrency","currency","push","totalPrice","getUserSettings","settingItem","uid","settings","settingSnapshot","value","key","getUser","signInWithPopup","result","getOrderDate","currentBillDate","Date","currentBillDay","getDate","currentBillMonth","getMonth","currentBillYear","getFullYear","concat","getCurrentItemTime","currentItemDate","currentItemHour","getHours","currentItemMinute","getMinutes","currentItemSeconds","getSeconds","FormSkeleton","styled","div","_templateObject","cssVar","FormSkeletonItem","_templateObject2","OrderOverviewSkeleton","orderOverviewStyles_templateObject","OrderOverviewSkeletonItem","orderOverviewStyles_templateObject2","Transition","props","Slide_default","Object","assign","direction","allItems","ordersReducer","settingsReducer","getLocation","location","MySwal","withReactContent","Swal","_useState","useState","_useState2","slicedToArray","open","setOpen","orderInfo","allItemsCalculatedPrices","allOrdersCurrentTime","allItemsCalculatedAmount","lastOrderName","billLocations","forEach","allOrdersCurrentTimeSortedByTime","sort","b","lastOrderCurrentTime","length","map","reduce","sendTotalPrice","update","Fragment","newValue","fire","title","input","TouchApp_default","fontWeight","Fab_default","size","aria-label","e","preventDefault","keys","orderByChild","equalTo","once","child","error","console","updates","setTimeout","Archive_default","DeleteForever_default","Dialog_default","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle_default","id","archive","archiveReducer","archiveGrouped","archiveGroupByIdReducer","locationReducer","getArchiveGroupById","archiveLength","_useReducer","useReducer","objectSpread","_useReducer2","setInputValue","handleChange","defineProperty","target","name","useEffect","groupBy","Paper_default","square","padding","margin","onSubmit","singleBillItem","Number","capitalize","TextField_default","onChange","required","Add_default","orderOverview","OrderListButtons","orderListButtons_templateObject","manipulateItem","action","itemRef","remove","locations","v","getLocationFn","slice","reverse","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","children","fontSize","disabled","Remove_default","Delete_default","TextFields_default","AttachMoney_default","archiveItems","totalBillPrice","billDate","clearOrdersArchiveId","sortedByArchiveId","i","display","flexDirection","vv","ii","textAlign","FormControl_default","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","Radio_default","checked","theme","Settings","currencySettings","themeSettings","activeTab","setActiveTab","Grid_default","container","justify","xs","md","Tabs_default","centered","event","Tab_default","icon","ViewList_default","Badge_default","paddingRight","badgeContent","Settings_default","sm","components_form","orderList","archiveList","GlobalStyle","createGlobalStyle","globalStyles_templateObject","createMuiTheme","palette","primary","blue","typography","useNextVariants","getOrders","orders","getArchive","getCurrency","getTheme","onAuthStateChanged","core_styles","CssBaseline_default","header","tabsNav","headerNotLogged","Boolean","window","hostname","match","appReducer","combineReducers","arguments","undefined","rootReducer","store","initialState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","configureStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e26f603f.chunk.js","sourcesContent":["module.exports =  {\n    xsMin: 'only screen and (min-width: 480px)',\n    smMin: 'only screen and (min-width: 768px)',\n    mdMin: 'only screen and (min-width: 992px)',\n    lgMin: 'only screen and (min-width: 1200px)'\n}\n","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyDwUNnoGXS-ibjAc1XjUHe-P22DfobTh3A\",\n    authDomain: \"killbills-528e.firebaseapp.com\",\n    databaseURL: \"https://killbills-528e.firebaseio.com\",\n    projectId: \"killbills-528e\",\n    storageBucket: \"killbills-528e.appspot.com\",\n    messagingSenderId: \"112394541996\"\n};\n\nfirebase.initializeApp(config);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\n\nexport default firebase;\n\n\n","export const GET_USER = 'GET_USER';\nexport const LOG_OUT = 'LOG_OUT';\nexport const GET_DATA_ORDERS_FROM_DB = 'GET_DATA_ORDERS_FROM_DB';\nexport const GET_DATA_ARCHIVE_FROM_DB = 'GET_DATA_ARCHIVE_FROM_DB';\nexport const ARCHIVE_ITEMS_GROUP_BY_ID = 'ARCHIVE_ITEMS_GROUP_BY_ID';\nexport const CURRENCY = 'CURRENCY';\nexport const THEME = 'THEME';\nexport const LOCATION = 'LOCATION';\n\nexport const getUserAction = (payload) => {\n\treturn {\n\t\ttype: GET_USER,\n\t\tpayload\n\t}\n};\n\nexport const logoutAction = () => {\n\treturn {\n\t\ttype: LOG_OUT\n\t}\n};\n\nexport const getOrdersFromDbAction = (payload) => {\n\treturn {\n\t\ttype: GET_DATA_ORDERS_FROM_DB,\n\t\tpayload\n\t}\n};\n\nexport const getArchiveFromDbAction = (payload) => {\n\treturn {\n\t\ttype: GET_DATA_ARCHIVE_FROM_DB,\n\t\tpayload\n\t}\n};\n\nexport const archiveItemsGroupByIdAction = (payload) => {\n\treturn {\n\t\ttype: ARCHIVE_ITEMS_GROUP_BY_ID,\n\t\tpayload\n\t}\n};\n\nexport const currencyAction = (payload) => {\n\treturn {\n\t\ttype: CURRENCY,\n\t\tpayload\n\t}\n};\n\nexport const themeAction = (payload) => {\n\treturn {\n\t\ttype: THEME,\n\t\tpayload\n\t}\n};\n\nexport const locationAction = (payload) => {\n\treturn {\n\t\ttype: LOCATION,\n\t\tpayload\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {auth} from '../firebase';\nimport { logoutAction } from '../appAction';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = {\n    justifyContent: 'space-between',\n    alignItems: 'center'\n};\n\nconst Header = ({user, logout}) => {\n\n    const logoutFn = () => {\n        auth.signOut()\n            .then(() => {\n                logout();\n            });\n    };\n\n    const userFirstName = user.displayName.substr(0, user.displayName.indexOf(' ')) || 'User';\n\n    return(\n        <AppBar position={'static'}>\n            <Toolbar style={styles}>\n                <Typography component=\"h1\" variant=\"h5\" color=\"inherit\">KillBill&#x24;</Typography>\n                <Chip\n                    avatar={<Avatar alt={user.displayName} src={user.photoURL} />}\n                    label={userFirstName}\n                />\n                <Button color=\"inherit\" onClick={logoutFn}>Logout</Button>\n            </Toolbar>\n        </AppBar>\n    )\n};\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.userReducer.user\n    }\n);\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => dispatch(logoutAction())\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n\nHeader.propTypes = {\n    user: PropTypes.object,\n    logout: PropTypes.func\n};\n","import firebase from './../firebase.js';\n\nexport const ORDER_ITEMS = 'orderItems';\nexport const ARCHIVE = 'archive';\n\nexport function databaseRef(path) { return firebase.database().ref(path)}\n\nexport function getDataFromDbFn(user, dispatcher, database) {\n\n    if(user) {\n        database.on('value', (snapshot) => {\n\n            let ordersSnapshot = snapshot.val();\n            let items = {};\n            let newState = [];\n\n            for (let item in ordersSnapshot) {\n\n                if (ordersSnapshot.hasOwnProperty(item)) {\n\n                    let order = ordersSnapshot[item];\n                    let userName = order[\"user\"];\n                    if (user.email === userName) {\n                        items[item] = order;\n\n                        if(database === databaseRef(ORDER_ITEMS)) {\n                            newState.unshift({\n                                itemId: item,\n                                itemName: items[item].itemName,\n                                itemInitialAmount: items[item].itemInitialAmount,\n                                itemCalculatedAmount: items[item].itemCalculatedAmount,\n                                itemInitialPrice: items[item].itemInitialPrice,\n                                itemCalculatedPrice: items[item].itemCalculatedPrice,\n                                currentDate: items[item].currentDate,\n                                currentTime: items[item].currentTime,\n                                user: items[item].user,\n                                archiveId: items[item].archiveId,\n                                billLocation: items[item].billLocation,\n                                itemCurrency: items[item].currency\n                            });\n                        } else {\n                            newState.push({\n                                itemId: item,\n                                itemName: items[item].itemName,\n                                itemInitialAmount: items[item].itemInitialAmount,\n                                itemCalculatedAmount: items[item].itemCalculatedAmount,\n                                itemInitialPrice: items[item].itemInitialPrice,\n                                itemCalculatedPrice: items[item].itemCalculatedPrice,\n                                currentDate: items[item].currentDate,\n                                currentTime: items[item].currentTime,\n                                user: items[item].user,\n                                archiveId: items[item].archiveId,\n                                totalPrice: items[item].totalPrice,\n                                billLocation: items[item].billLocation,\n                                itemCurrency: items[item].currency\n                            });\n                        }\n\n                    }\n                }\n            }\n            dispatcher(newState);\n        });\n    }\n}\n\nexport const getUserSettings = (user, dispatcher, settingItem) => {\n\n    if ( user ) {\n        const ref = databaseRef('settings/' + settingItem + '/' + user.uid);\n\n        if (ref) {\n            ref.on('value', (snapshot) => {\n                let settings = {};\n\n                let settingSnapshot = snapshot.val();\n\n                if ( settingSnapshot !== null ) {\n                    let value = settingItem;\n\n                    for( let key in settingSnapshot) {\n\n                        if(settingSnapshot.hasOwnProperty(key)) {\n                            value = settingSnapshot[key];\n                        }\n                    }\n                    dispatcher(settings.settingItem = value)\n                } else {\n                    if(settingItem === 'currency') {\n                        dispatcher(settings.settingItem = 'CZK')\n                    }\n                    if(settingItem === 'theme') {\n                        dispatcher(settings.settingItem = 'Light')\n                    }\n                }\n            });\n        }\n\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { auth, provider } from './../firebase.js';\nimport {getUserAction} from './../appAction';\nimport {connect} from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n    justifyContent: 'space-between',\n    alignItems: 'center'\n};\n\nconst HeaderNotLogged = ({ getUser }) => {\n\n    const loginFn = () => {\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                const user = result.user;\n                getUser(user);\n            });\n    };\n\n    return (\n        <div>\n            <AppBar position={'static'}>\n                <Toolbar style={styles}>\n                    <Typography component=\"h1\" variant=\"h5\" color=\"inherit\">KillBill&#x24;</Typography>\n                    <Button color=\"inherit\" onClick={loginFn}>Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUser: (user) => dispatch(getUserAction(user))\n    }\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(HeaderNotLogged);\n\n\nHeaderNotLogged.propTypes = {\n    getUser: PropTypes.func\n};\n","export function getOrderDate() {\n    let currentBillDate = new Date();\n    let currentBillDay = currentBillDate.getDate();\n    let currentBillMonth = currentBillDate.getMonth() + 1;\n    let currentBillYear = currentBillDate.getFullYear();\n\n    return `${currentBillDay}/${currentBillMonth}/${currentBillYear}`;\n}\n\nexport function getCurrentItemTime(){\n    let currentItemDate = new Date();\n    let currentItemHour = currentItemDate.getHours();\n    let currentItemMinute = currentItemDate.getMinutes();\n    let currentItemSeconds = currentItemDate.getSeconds();\n\n    return `${currentItemHour}:${currentItemMinute}:${currentItemSeconds}`;\n}\n","import styled from 'styled-components'\nimport cssVar from './../../utils/globalVariables';\n\nexport const FormSkeleton = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    flex-wrap: wrap;\n    width: 100%;\n\n    @media ${cssVar.smMin} {\n        flex-direction: row;\n    }\n`\n\nexport const FormSkeletonItem = styled.div`\n    flex: 0 0 100%;\n    margin-bottom: 20px;\n\n    @media ${cssVar.smMin} {\n        flex: 0 0 48%;\n    }\n\n    &:first-child {\n\n        @media ${cssVar.smMin} {\n            margin-right: 2%;\n        }\n\n        > div {\n            width: 100%;\n        }\n\n    }\n\n    &:last-child {\n        display: flex;\n        align-items: baseline;\n        justify-content: space-between;\n\n        @media ${cssVar.smMin} {\n            margin-left: 2%;\n        }\n\n        > div {\n            display: flex;\n            flex: 0 1 calc(100% - 50px);\n        }\n    }\n`\n","import styled from 'styled-components'\nimport cssVar from './../../utils/globalVariables';\n\nexport const OrderOverviewSkeleton = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media ${cssVar.smMin} {\n        flex-direction: row;\n    }\n`\n\nexport const OrderOverviewSkeletonItem = styled.div`\n\n    &:last-child {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n\n        button {\n          margin-top: 20px;\n        }\n    }\n`\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { databaseRef,  ORDER_ITEMS, ARCHIVE } from './../utils/fireBaseUtils';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport Archive from '@material-ui/icons/Archive';\nimport Typography from '@material-ui/core/Typography';\nimport { OrderOverviewSkeleton, OrderOverviewSkeletonItem } from './styled/orderOverviewStyles'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport TouchApp from '@material-ui/icons/TouchApp';\nimport {locationAction} from './../appAction';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst OrderOverview = ({user, allItems, currency, getLocation}) => {\n\n    const MySwal = withReactContent(Swal);\n\n    const [open, setOpen] = useState(false);\n\n    const clearCurrentBill = () => {\n        let updates = {};\n        databaseRef(ORDER_ITEMS).orderByChild('user').equalTo(user.email).once('value', function(snapshot){\n            snapshot.forEach(function(child) {\n                updates[child.key] = null;\n            });\n        }).then(() => {\n            databaseRef(ORDER_ITEMS).update(updates);\n            getLocation('')\n        });\n    };\n\n    const archiveCurrentBill = (e) => {\n        e.preventDefault();\n\n        let keys = [];\n\n        databaseRef(ORDER_ITEMS).orderByChild('user').equalTo(user.email).once('value', function(snapshot){\n            snapshot.forEach(function(child) {\n                keys.push([child.key]);\n            });\n        }).then(() => {\n\n            databaseRef(ORDER_ITEMS).orderByChild('user').equalTo(user.email).once('value', function(snapshot)  {\n\n                databaseRef(ARCHIVE).update( snapshot.val(), function(error) {\n\n                    if( !error ) {\n                        let updates = {};\n\n                        snapshot.forEach(function(child) {\n                            updates[child.key] = null;\n                        });\n\n                        databaseRef(ORDER_ITEMS).update(updates);\n                        sendTotalPrice();\n                    }\n                    else if( typeof(console) !== 'undefined' && console.error ) {\n                        console.error(error);\n                    }\n                });\n            }).then(() => {\n                setOpen(true);\n                setTimeout(() => {\n                    setOpen(false)\n                },1500)\n                getLocation('')\n            });\n        });\n    };\n\n\n    const orderInfo = () => {\n\n        let allItemsCalculatedPrices = [];\n        let allOrdersCurrentTime = [];\n        let allItemsCalculatedAmount = [];\n        let lastOrderName = '';\n        let billLocations = [];\n\n        allItems.forEach((item) => {\n            allItemsCalculatedPrices.push(item.itemCalculatedPrice);\n            allOrdersCurrentTime.push(item.currentTime);\n            allItemsCalculatedAmount.push(item.itemCalculatedAmount);\n            billLocations.push(item.billLocation);\n        });\n\n        let billLocation = billLocations[0];\n\n        let allOrdersCurrentTimeSortedByTime = allOrdersCurrentTime.sort((a, b) => {\n            return new Date('1970/01/01 ' + a) - new Date('1970/01/01 ' + b);\n        });\n\n        let lastOrderCurrentTime = allOrdersCurrentTimeSortedByTime[allOrdersCurrentTimeSortedByTime.length - 1];\n\n\n        allItems.map((item) => {\n\n            if(lastOrderCurrentTime === item.currentTime) {\n                lastOrderName = item.itemName;\n            }\n            return lastOrderName\n        });\n\n        return {\n            allItemsCalculatedPrices: allItemsCalculatedPrices.reduce((a, b) => a + b, 0),\n            lastOrderCurrentTime: lastOrderCurrentTime,\n            allItemsCalculatedAmount: allItemsCalculatedAmount.reduce((a, b) => a + b, 0),\n            lastOrderName: lastOrderName,\n            billLocation: billLocation\n        }\n    };\n\n    const allItemsCalculatedPrices = orderInfo().allItemsCalculatedPrices;\n    const lastOrderCurrentTime = orderInfo().lastOrderCurrentTime;\n    const allItemsCalculatedAmount = orderInfo().allItemsCalculatedAmount;\n    const lastOrderName = orderInfo().lastOrderName;\n    const billLocation = orderInfo().billLocation;\n\n    const sendTotalPrice = () => {\n\n        allItems.forEach((item) => {\n            databaseRef(`/${ARCHIVE}/${item.itemId}`).update({totalPrice: allItemsCalculatedPrices})\n        })\n    }\n\n    const setBillLocation = () => {\n        let newValue;\n\n        MySwal.fire({\n            title: <Typography component=\"p\" variant=\"h5\">Enter location:</Typography>,\n            input: 'text'\n        }).then((result) => {\n            newValue = result.value;\n\n            if(newValue) {\n                allItems.forEach((item) => {\n                    databaseRef(`/${ORDER_ITEMS}/${item.itemId}`).update({billLocation: newValue})\n                })\n            }\n        });\n    }\n\n    return (\n        <OrderOverviewSkeleton>\n            { allItems.length > 0 ?\n\n                <>\n                    <OrderOverviewSkeletonItem>\n                        <Typography component=\"p\" variant=\"h5\" color=\"inherit\" onClick={setBillLocation}>\n                            {billLocation} <TouchApp />\n                        </Typography>\n                        <Typography component=\"p\" variant=\"h6\" color=\"inherit\" style={{fontWeight: '400'}}>\n                            Total: {allItemsCalculatedPrices} {currency}\n                        </Typography>\n                        <Typography component=\"p\" variant=\"subtitle1\" color=\"inherit\">\n                            Items: {allItemsCalculatedAmount}\n                        </Typography>\n                        <Typography component=\"p\" variant=\"subtitle1\" color=\"inherit\">\n                            Last order: {lastOrderName} at {lastOrderCurrentTime}\n                        </Typography>\n                    </OrderOverviewSkeletonItem>\n                    <OrderOverviewSkeletonItem>\n                        <Fab size='medium' color='primary' aria-label='Add' onClick={archiveCurrentBill}>\n                            <Archive />\n                        </Fab>\n                        <Fab size='medium' color='secondary' aria-label='delete current orders' onClick={clearCurrentBill}>\n                            <DeleteForever />\n                        </Fab>\n                    </OrderOverviewSkeletonItem>\n                </>\n                :\n                <Typography component=\"h3\" color=\"inherit\">Enter some item&#x24;</Typography>\n            }\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    <Typography component=\"p\" variant=\"subtitle1\">\n                        Bill was added to Archive\n                    </Typography>\n                </DialogTitle>\n            </Dialog>\n        </OrderOverviewSkeleton>\n\n    )\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getLocation: (location) => dispatch(locationAction(location))\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.userReducer.user,\n        allItems: state.ordersReducer,\n        currency: state.settingsReducer.currency\n    }\n);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OrderOverview);\n\nOrderOverview.propTypes = {\n    allItems: PropTypes.array,\n    user: PropTypes.object,\n    currency: PropTypes.string\n};\n","import React, { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { capitalize } from 'lodash';\nimport {connect} from 'react-redux';\nimport { archiveItemsGroupByIdAction } from './../appAction';\nimport { databaseRef, ORDER_ITEMS } from './../utils/fireBaseUtils';\nimport { getOrderDate,getCurrentItemTime } from './../utils/appUtils';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport {FormSkeleton, FormSkeletonItem} from './styled/formStyles';\nimport OrderOverview from './orderOverview';\nimport Paper from '@material-ui/core/Paper';\nimport { groupBy } from 'lodash';\n\nconst Form = ({user, archive, getArchiveGroupById, archiveGrouped, currency, billLocation}) => {\n\n    const [input, setInputValue] = useReducer(\n        (state, newState) => ({...state, ...newState}),\n        {\n            itemName: '',\n            itemInitialPrice: ''\n        }\n    );\n\n    const handleChange = e => {\n        setInputValue({[e.target.name]: e.target.value});\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const singleBillItem = {\n            currentDate: getOrderDate(),\n            currentTime: getCurrentItemTime(),\n            itemInitialAmount: Number(1),\n            itemInitialPrice: Number(input.itemInitialPrice),\n            itemName: capitalize(input.itemName),\n            itemCalculatedAmount: Number(1),\n            itemCalculatedPrice: Number(input.itemInitialPrice),\n            user: user.email,\n            archiveId: Object.keys(archiveGrouped).length + 1,\n            billLocation: billLocation ? billLocation : 'Bill Location',\n            currency: currency\n        };\n\n        databaseRef(ORDER_ITEMS).push(singleBillItem);\n\n        setInputValue({\n            itemName: '',\n            itemInitialPrice: ''\n        })\n    };\n\n\n\n    useEffect(() => {\n        const getArchiveLengthFn = () => {\n            getArchiveGroupById(groupBy(archive, 'archiveId'));\n        };\n\n        getArchiveLengthFn();\n    },[archive, getArchiveGroupById]);\n\n    return (\n        <Paper square style={{padding: '24px', margin: '2%'}}>\n            <form onSubmit={handleSubmit}>\n                <FormSkeleton>\n                    <FormSkeletonItem>\n                        <TextField\n                            name='itemName'\n                            label='Item Name'\n                            value={input.itemName}\n                            onChange={handleChange}\n                            variant='standard'\n                            type='text'\n                            required\n                        />\n                    </FormSkeletonItem>\n\n\n                    <FormSkeletonItem>\n                        <TextField\n                            name='itemInitialPrice'\n                            label='Item Price'\n                            value={input.itemInitialPrice}\n                            onChange={handleChange}\n                            variant='standard'\n                            type='number'\n                            required\n                        />\n                        <Fab size='medium' color='primary' aria-label='Add' type='submit'>\n                            <AddIcon />\n                        </Fab>\n                    </FormSkeletonItem>\n                </FormSkeleton>\n\n            </form>\n\n            <OrderOverview />\n\n        </Paper>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getArchiveGroupById: (archiveLength) => dispatch(archiveItemsGroupByIdAction(archiveLength))\n    }\n};\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.userReducer.user,\n        archive: state.archiveReducer,\n        archiveGrouped: state.archiveGroupByIdReducer,\n        currency: state.settingsReducer.currency,\n        billLocation: state.locationReducer.billLocation,\n    }\n);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Form);\n\nForm.propTypes = {\n    user: PropTypes.object,\n    currency: PropTypes.string,\n    archive: PropTypes.array,\n    getArchiveGroupById: PropTypes.func,\n    archiveGrouped: PropTypes.object\n};\n","import styled from 'styled-components'\nimport cssVar from './../../utils/globalVariables';\n\nexport const OrderListButtons = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n\n    @media ${cssVar.smMin} {\n\n    }\n`\n\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {databaseRef, ORDER_ITEMS } from './../utils/fireBaseUtils';\nimport { getCurrentItemTime } from './../utils/appUtils';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Delete from '@material-ui/icons/Delete';\nimport {OrderListButtons} from './styled/orderListButtons';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport {locationAction} from './../appAction';\n\nconst INCREMENT = 'increment';\nconst DECREMENT = 'decrement';\nconst DELETE = 'delete';\nconst CHANGE_ITEM_NAME = 'changeItemName';\nconst CHANGE_ITEM_PRICE = 'changeItemPrice';\n\nconst OrderList = ({allItems, getLocation}) => {\n    let itemCalculatedPrice;\n    let itemCalculatedAmount;\n    let newValue;\n    const MySwal = withReactContent(Swal);\n\n    const manipulateItem = (itemId, action) => {\n        const itemRef = databaseRef(`/${ORDER_ITEMS}/${itemId}`);\n\n        allItems.forEach((item) => {\n\n            if (item.itemId === itemId) {\n\n                switch(action) {\n                    case INCREMENT: {\n                        itemCalculatedPrice = item.itemCalculatedPrice + item.itemInitialPrice;\n                        itemCalculatedAmount = item.itemCalculatedAmount + item.itemInitialAmount;\n                        itemRef.update({\n                            itemCalculatedPrice: itemCalculatedPrice,\n                            itemCalculatedAmount: itemCalculatedAmount,\n                            currentTime: getCurrentItemTime()\n                        });\n                        break;\n                    }\n                    case DECREMENT: {\n                        itemCalculatedPrice = item.itemCalculatedPrice - item.itemInitialPrice;\n                        itemCalculatedAmount = item.itemCalculatedAmount - item.itemInitialAmount;\n                        itemRef.update({\n                            itemCalculatedPrice: itemCalculatedPrice,\n                            itemCalculatedAmount: itemCalculatedAmount,\n                            currentTime: getCurrentItemTime()\n                        });\n                        break;\n                    }\n                    case DELETE: {\n                        itemRef.remove();\n                        break;\n                    }\n                    case CHANGE_ITEM_NAME: {\n                        MySwal.fire({\n                            title: <Typography component=\"p\" variant=\"h5\">Enter new item name:</Typography>,\n                            input: 'text'\n                        }).then((result) => {\n                            newValue = result.value;\n\n                            if(newValue) {\n                                itemRef.update({\n                                    itemName: newValue\n                                });\n                            }\n                        });\n                        break;\n                    }\n                    case CHANGE_ITEM_PRICE: {\n                        MySwal.fire({\n                            title: <Typography component=\"p\" variant=\"h5\">Enter new item price. Must be a number!</Typography>,\n                            input: 'number'\n                        }).then((result) => {\n                            newValue = result.value;\n\n                            if(newValue) {\n                                itemCalculatedPrice = newValue * item.itemCalculatedAmount;\n                                itemRef.update({\n                                    itemInitialPrice: Number(newValue),\n                                    itemCalculatedPrice: itemCalculatedPrice\n                                });\n                            }\n                        });\n                        break;\n                    }\n                    default: // Do nothing\n                }\n            }\n        });\n    };\n\n    useEffect(()=> {\n        let location = '';\n        const getLocationFn = () => {\n\n            let locations = [];\n            if (allItems.length > 0) {\n                allItems.map((v) => {\n                    locations.push(v.billLocation)\n                    return location = locations[0]\n                })\n                getLocation(location)\n            }\n        }\n\n        getLocationFn()\n    }, [getLocation, allItems])\n\n   return (\n       <>\n           {allItems &&\n\n               <>\n                   {allItems.slice(0).reverse().map((item) => {\n                       return(\n                           <Paper key={item.itemId} square style={{margin: '2%'}}>\n                               <ExpansionPanel>\n                                   <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} style={{padding: '3% 24px'}}>\n                                       <div>\n                                           <Typography component=\"p\" variant=\"h5\">\n                                               {item.itemName}\n                                           </Typography>\n                                           <Typography component=\"p\" variant=\"subtitle1\">\n                                               {item.itemCalculatedAmount} x {item.itemInitialPrice} = {item.itemCalculatedPrice} {item.itemCurrency}\n                                           </Typography>\n                                           <Typography component=\"p\" variant=\"subtitle2\">\n                                               {item.currentTime}\n                                           </Typography>\n                                       </div>\n                                   </ExpansionPanelSummary>\n                                   <ExpansionPanelDetails>\n                                       <OrderListButtons>\n                                           <Fab children={<AddIcon fontSize=\"small\" />} onClick={() => manipulateItem(item.itemId, INCREMENT)} color=\"primary\" aria-label=\"Add one item\" size='small'/>\n                                           <Fab disabled={item.itemCalculatedAmount < 2} children={<RemoveIcon fontSize=\"small\" />} onClick={() => manipulateItem(item.itemId, DECREMENT)} color=\"secondary\" aria-label=\"Remove one item\" size='small' />\n                                           <Fab children={<Delete fontSize=\"small\" />} onClick={() => manipulateItem(item.itemId, DELETE)} color=\"secondary\" aria-label=\"Delete item\" size='small' />\n                                           <Fab children={<TextFieldsIcon fontSize=\"small\" />} onClick={() => manipulateItem(item.itemId, CHANGE_ITEM_NAME)} aria-label=\"Edit item name\" size='small' />\n                                           <Fab children={<AttachMoneyIcon fontSize=\"small\" />} onClick={() => manipulateItem(item.itemId, CHANGE_ITEM_PRICE)} aria-label=\"Edit item price\" size='small' />\n                                       </OrderListButtons>\n                                   </ExpansionPanelDetails>\n                               </ExpansionPanel>\n                           </Paper>\n                       )\n                   })}\n               </>\n\n           }\n       </>\n   )\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getLocation: (location) => dispatch(locationAction(location))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allItems: state.ordersReducer\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OrderList);\n\nOrderList.propTypes = {\n    allItems: PropTypes.array\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { groupBy } from 'lodash';\nimport {databaseRef, ORDER_ITEMS, ARCHIVE} from './../utils/fireBaseUtils';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst ArchiveList = ({archiveItems, allItems, user}) => {\n\n    const clearArchive = () => {\n\n        databaseRef(ARCHIVE).orderByChild('user').equalTo(user.email).once('value', function(snapshot){\n            let updates = {};\n\n            snapshot.forEach(function(child) {\n                updates[child.key] = null;\n            });\n\n            databaseRef(ARCHIVE).update(updates);\n        });\n\n        clearOrdersArchiveId()\n    };\n\n    const clearOrdersArchiveId = () => {\n\n        allItems.forEach((item) => {\n            databaseRef(`/${ORDER_ITEMS}/${item.itemId}`).update({archiveId: 1})\n        })\n    }\n\n    let sortedByArchiveId = groupBy(archiveItems, 'archiveId');\n    let totalBillPrice;\n    let billDate;\n    let billLocation;\n    let currency;\n\n    return(\n        <>\n            {Object.keys(sortedByArchiveId).length > 0 &&\n\n                <>\n                    {Object.keys(sortedByArchiveId).map((v, i) => {\n                        return (\n                            <Paper key={i} square style={{margin: '2%', padding: '3% 24px', display: 'flex', flexDirection: 'column-reverse'}}>\n                                <div>\n                                    {sortedByArchiveId[v].map((vv, ii) => {\n                                        totalBillPrice = vv.totalPrice;\n                                        billDate = vv.currentDate;\n                                        billLocation = vv.billLocation;\n                                        currency = vv.itemCurrency;\n                                        return (\n                                            <Typography key={ii} component=\"p\" variant=\"subtitle1\">\n                                                {vv.itemCalculatedAmount} x {vv.itemName} = {vv.itemCalculatedPrice} {vv.itemCurrency}\n                                            </Typography>\n                                        )\n                                    })}\n                                    <Typography component=\"p\" variant=\"subtitle1\">\n                                        total: {totalBillPrice} {currency}\n                                    </Typography>\n                                </div>\n                                <div>\n\n                                    {billLocation !== \"Bill location\" &&\n                                        <Typography component=\"p\" variant=\"subtitle1\">\n                                            Location: {billLocation}\n                                        </Typography>\n                                    }\n\n                                    <Typography component=\"p\" variant=\"subtitle1\">\n                                        {billDate}\n                                    </Typography>\n                                </div>\n                            </Paper>\n                        )\n                    })}\n\n                </>\n            }\n\n            <div>\n                {Object.keys(sortedByArchiveId).length === 0 &&\n                    <Paper square style={{margin: '2%', padding: '3% 24px', textAlign: 'center'}}>\n                        <Typography component=\"p\" variant=\"subtitle1\">\n                            Archive is empty\n                        </Typography>\n                    </Paper>\n                }\n                <div style={{padding: '3% 24px', textAlign: 'center'}}>\n                    <Fab size='small' disabled={Object.keys(sortedByArchiveId).length < 1} color='secondary' aria-label='clear archive orders' onClick={clearArchive}>\n                        <DeleteForever />\n                    </Fab>\n                </div>\n            </div>\n        </>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allItems: state.ordersReducer,\n        archiveItems: state.archiveReducer,\n        user: state.userReducer.user\n    }\n};\n\nexport default connect(\n    mapStateToProps\n)(ArchiveList);\n\nArchiveList.propTypes = {\n    archiveItems: PropTypes.array,\n    allItems: PropTypes.array,\n    user: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { connect } from 'react-redux';\nimport {databaseRef, ORDER_ITEMS } from './../utils/fireBaseUtils';\n\nconst CurencySettings = ({user, currency, allItems}) => {\n\n\n    const handleCurrency = (e) => {\n        let value = e.target.value;\n        databaseRef('settings/currency/' + user.uid).update({currency: value}).then(() => {\n            allItems.forEach((item) => {\n                databaseRef(`/${ORDER_ITEMS}/${item.itemId}`).update({currency: value})\n            })\n        });\n    }\n\n    return(\n        <Paper style={{margin: '2%', padding: '3% 24px'}}>\n            <div>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                        <Typography component=\"p\" variant=\"subtitle1\">\n                            Currency is: {currency}\n                        </Typography>\n                    </FormLabel>\n\n                    <RadioGroup\n                        aria-label=\"Currency\"\n                        name=\"currency\"\n                        value={currency}\n                        onChange={handleCurrency}\n                    >\n                        <FormControlLabel value=\"CZK\" control={<Radio color=\"primary\" checked={currency === \"CZK\"}/>} label=\"CZK\" />\n                        <FormControlLabel value=\"EUR\" control={<Radio color=\"primary\" checked={currency === \"EUR\"} />} label=\"EUR\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        </Paper>\n    )\n\n}\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.userReducer.user,\n        currency: state.settingsReducer.currency,\n        allItems: state.ordersReducer\n    }\n);\n\nexport default connect(\n    mapStateToProps\n)(CurencySettings);\n\nCurencySettings.propTypes = {\n    currency: PropTypes.string,\n    user: PropTypes.object,\n    allItems: PropTypes.array\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport firebase from './../firebase.js';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { connect } from 'react-redux';\nimport {databaseRef, ORDER_ITEMS } from './../utils/fireBaseUtils';\n\nconst ThemeSettings = ({user, theme, allItems}) => {\n\n\n    const handleTheme = (e) => {\n        let value = e.target.value;\n        firebase.database().ref('settings/theme/' + user.uid).update({theme: value}).then(() => {\n            allItems.forEach((item) => {\n                databaseRef(`/${ORDER_ITEMS}/${item.itemId}`).update({theme: value})\n            })\n        });\n    }\n\n\n    return(\n        <Paper style={{margin: '2%', padding: '3% 24px'}}>\n            <div>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                        <Typography component=\"p\" variant=\"subtitle1\">\n                            Theme is: {theme}\n                        </Typography>\n                    </FormLabel>\n\n                    <RadioGroup\n                        aria-label=\"Theme\"\n                        name=\"theme\"\n                        value={theme}\n                        onChange={handleTheme}\n                    >\n                        <FormControlLabel value=\"Light\" control={<Radio color=\"primary\" checked={theme === \"Light\"}/>} label=\"Light\" />\n                        <FormControlLabel value=\"Dark\" control={<Radio color=\"primary\" checked={theme === \"Dark\"} />} label=\"Dark\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        </Paper>\n    )\n\n}\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.userReducer.user,\n        theme: state.settingsReducer.theme,\n        allItems: state.ordersReducer\n    }\n);\n\nexport default connect(\n    mapStateToProps\n)(ThemeSettings);\n\nThemeSettings.propTypes = {\n    theme: PropTypes.string,\n    user: PropTypes.object,\n    allItems: PropTypes.array\n};\n","import React from 'react';\nimport CurencySettings from './currencySettings';\nimport ThemeSettings from './themeSettings';\n\nconst Settings = () => {\n\n    return(\n        <>\n            <CurencySettings />\n            <ThemeSettings />\n        </>\n    )\n\n};\n\nexport default Settings;\n","import React, { useState } from 'react';\nimport Form from './form';\nimport OrderList from './orderList';\nimport ArchiveList from './archiveList';\nimport SettingsPage from './settings';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport ViewList from '@material-ui/icons/ViewList';\nimport Archive from '@material-ui/icons/Archive';\nimport Settings from '@material-ui/icons/Settings';\nimport Badge from '@material-ui/core/Badge';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { groupBy } from 'lodash';\nimport Grid from '@material-ui/core/Grid';\n\nconst TabsNav = ({archiveItems}) => {\n    const [activeTab, setActiveTab] = useState(0);\n\n    const handleChange = (event, newValue) => {\n        setActiveTab(newValue)\n    };\n\n    let sortedByArchiveId = Object.keys(groupBy(archiveItems, 'archiveId')).length;\n\n    return(\n        <>\n            <Grid container justify={'center'}>\n                <Grid item xs={12} md={6}>\n                    <Tabs variant='fullWidth' color=\"primary\"\n                          centered\n                          value={activeTab}\n                          onChange={handleChange}\n                    >\n                        <Tab label='Orders'\n                             icon={<ViewList />}\n                        />\n                        <Tab label={\n                                <Badge style={{paddingRight: '10px'}} badgeContent={sortedByArchiveId}>\n                                    Archive\n                                </Badge>\n                            }\n                            icon={<Archive />}\n                        />\n                        <Tab label='Settings'\n                             icon={<Settings />}\n                        />\n                    </Tabs>\n                </Grid>\n            </Grid>\n\n            <Grid container justify={'center'}>\n                <Grid item xs={12} sm={8} md={6}>\n                    {activeTab === 0 && <><Form /><OrderList/></>}\n                    {activeTab === 1 && <ArchiveList />}\n                    {activeTab === 2 && <SettingsPage />}\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        archiveItems: state.archiveReducer\n    }\n};\n\nexport default connect(\n    mapStateToProps\n)(TabsNav);\n\nTabsNav.propTypes = {\n    archiveItems: PropTypes.array\n};\n","import { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyle = createGlobalStyle`\n  /* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n`\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { auth } from './firebase.js';\nimport Header from './components/header';\nimport {\n    getUserAction,\n    getOrdersFromDbAction,\n    getArchiveFromDbAction,\n    currencyAction,\n    themeAction\n} from './appAction';\nimport { connect } from 'react-redux';\nimport { getDataFromDbFn, getUserSettings, databaseRef, ORDER_ITEMS, ARCHIVE } from './utils/fireBaseUtils';\nimport HeaderNotLogged from './components/headerNotLogged';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport TabsNav from './components/tabsNav';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {GlobalStyle} from './components/styled/globalStyles'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue\n    },\n    typography: {\n        useNextVariants: true\n    },\n});\n\nconst App = ({ user, getUser, getOrders, getArchive, getCurrency, getTheme }) => {\n\n    useEffect(() => {\n\n        const getUserFn = () => {\n            auth.onAuthStateChanged((user) => {\n                if (user) {\n                    getUser(user);\n                }\n            });\n        };\n\n        const getUserSettingsFn = () => {\n            getCurrency(getUserSettings(user, getCurrency, 'currency'));\n            getTheme(getUserSettings(user, getTheme, 'theme'))\n        }\n\n        getUserFn();\n        getDataFromDbFn(user, getOrders, databaseRef(ORDER_ITEMS));\n        getDataFromDbFn(user, getArchive, databaseRef(ARCHIVE));\n        getUserSettingsFn()\n    },[user, getArchive, getOrders, getUser, getCurrency, getTheme]);\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <GlobalStyle />\n            <CssBaseline />\n\n            { user ?\n                <>\n                    <Header />\n                    <TabsNav />\n                </>\n                :\n                <HeaderNotLogged />\n\n            }\n        </MuiThemeProvider>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getUser: (user) => dispatch(getUserAction(user)),\n        getOrders: (orders) => dispatch(getOrdersFromDbAction(orders)),\n        getArchive: (archive) => dispatch(getArchiveFromDbAction(archive)),\n        getCurrency: (currency) => dispatch(currencyAction(currency)),\n        getTheme: (theme) => dispatch(themeAction(theme))\n    }\n};\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.userReducer.user\n    }\n);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n\nApp.propTypes = {\n    user: PropTypes.object,\n    getUser: PropTypes.func,\n    getOrders: PropTypes.func,\n    getArchive: PropTypes.func,\n    getCurrency: PropTypes.func,\n    getTheme: PropTypes.func\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport {LOG_OUT} from './appAction'\nimport { userReducer, ordersReducer, archiveReducer, archiveGroupByIdReducer, settingsReducer, locationReducer } from './appReducer';\n\nexport const appReducer = combineReducers({\n\tuserReducer,\n\tordersReducer,\n\tarchiveReducer,\n\tarchiveGroupByIdReducer,\n\tsettingsReducer,\n\tlocationReducer\n})\n\nexport const rootReducer = (state, action) => {\n\tif(action.type === LOG_OUT) {\n\t\tstate = undefined\n\t}\n\treturn appReducer(state, action)\n};\n","import {\n\tGET_USER,\n\tLOG_OUT,\n\tGET_DATA_ORDERS_FROM_DB,\n\tGET_DATA_ARCHIVE_FROM_DB,\n\tARCHIVE_ITEMS_GROUP_BY_ID,\n\tCURRENCY,\n\tTHEME,\n\tLOCATION\n} from './appAction';\n\nexport const userReducer = (state = {user: null}, action) => {\n\tswitch (action.type) {\n\t\tcase GET_USER: {\n\t\t\treturn {\n\t\t\t\t...state, user: action.payload\n\t\t\t}\n\t\t}\n\t\tcase LOG_OUT: {\n\t\t\treturn {\n\t\t\t\t...state, user: null\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n};\n\nexport const ordersReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GET_DATA_ORDERS_FROM_DB: {\n\t\t\treturn action.payload\n\t\t}\n\t\tdefault: return state\n\t}\n};\n\nexport const archiveReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GET_DATA_ARCHIVE_FROM_DB: {\n\t\t\treturn action.payload\n\t\t}\n\t\tdefault: return state\n\t}\n};\n\nexport const archiveGroupByIdReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ARCHIVE_ITEMS_GROUP_BY_ID: {\n\t\t\treturn action.payload\n\t\t}\n\t\tdefault: return state\n\t}\n}\n\nexport const settingsReducer = (state = {currency: null, theme: null}, action) => {\n\tswitch (action.type) {\n\t\tcase CURRENCY: {\n\t\t\treturn {\n\t\t\t\t...state, currency: action.payload\n\t\t\t}\n\t\t}\n\t\tcase THEME: {\n\t\t\treturn {\n\t\t\t\t...state, theme: action.payload\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n}\n\nexport const locationReducer = (state = {billLocation: null}, action) => {\n\tswitch (action.type) {\n\t\tcase LOCATION: {\n\t\t\treturn {\n\t\t\t\t...state, billLocation: action.payload\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {configureStore} from './store/configureStore';\n\nconst initialState ={};\nconst store = configureStore(initialState);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, compose} from 'redux';\nimport {rootReducer} from './../rootReducer';\n\nexport function configureStore(initialState = {}) {\n\tconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\treturn createStore(rootReducer, initialState, composeEnhancer());\n}\n"],"sourceRoot":""}